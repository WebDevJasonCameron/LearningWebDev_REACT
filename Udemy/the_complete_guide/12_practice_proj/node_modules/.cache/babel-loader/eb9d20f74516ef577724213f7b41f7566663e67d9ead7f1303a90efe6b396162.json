{"ast":null,"code":"var _jsxFileName = \"/Users/jasoncameron/Desktop/Learning/LearningWebDev_Frontend/REACT/Udemy/the_complete_guide/11_forms/src/components/SimpleInput.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  _s();\n  const {\n    value: enteredName,\n    isValid: enteredNameIsValid,\n    hasError: nameInputHasError,\n    valueChangeHandler: nameChangedHandler,\n    inputBlurHandler: nameBlurHandler,\n    reset: resetNameInput\n  } = useInput(value => value.trim() !== \"\");\n  const [enteredEmail, setEnteredEmail] = useState(\"\");\n  const [enteredEmailTouch, setEnteredEmailTouch] = useState(\"\");\n  const enterEmailIsValid = enteredEmail.includes(\"@\");\n  const enteredEmailIsInvalid = !enterEmailIsValid && enteredEmailTouch;\n  let formIsValid = false;\n  if (enteredNameIsValid && enterEmailIsValid) {\n    formIsValid = true;\n  }\n  const emailInputChangeHandler = e => {\n    setEnteredEmail(e.target.value);\n  };\n  const emailInputBlurHandler = e => {\n    setEnteredEmailTouch(true);\n  };\n  const formSubmissionHandler = e => {\n    e.preventDefault();\n    if (!enteredNameIsValid) {\n      return;\n    }\n    console.log(enteredName);\n\n    // nameInputRef.current.value = \"\";         // NOT IDEAL, DON'T MANIPULATE THE DOM\n    resetNameInput();\n    setEnteredEmail(\"\");\n    setEnteredEmailTouch(false);\n  };\n  const nameInputClasses = nameInputHasError ? \"form-control\" : \"form-control invalid\";\n  const emailInputClasses = enteredEmailIsInvalid ? \"form-control invalid\" : \"form-control\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: nameInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        onChange: nameChangedHandler,\n        onBlur: nameBlurHandler,\n        value: enteredName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), nameInputHasError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Name must not be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputClasses,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Your Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputChangeHandler,\n        onBlur: emailInputBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), enteredEmailIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Please enter a valid email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this);\n};\n_s(SimpleInput, \"Qw2dEZjhu1XIucjDiNLSz1K+QlU=\", false, function () {\n  return [useInput];\n});\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useState","useInput","SimpleInput","props","value","enteredName","isValid","enteredNameIsValid","hasError","nameInputHasError","valueChangeHandler","nameChangedHandler","inputBlurHandler","nameBlurHandler","reset","resetNameInput","trim","enteredEmail","setEnteredEmail","enteredEmailTouch","setEnteredEmailTouch","enterEmailIsValid","includes","enteredEmailIsInvalid","formIsValid","emailInputChangeHandler","e","target","emailInputBlurHandler","formSubmissionHandler","preventDefault","console","log","nameInputClasses","emailInputClasses"],"sources":["/Users/jasoncameron/Desktop/Learning/LearningWebDev_Frontend/REACT/Udemy/the_complete_guide/11_forms/src/components/SimpleInput.js"],"sourcesContent":["import { useState } from \"react\";\n\nimport useInput from \"../hooks/use-input\";\n\nconst SimpleInput = (props) => {\n\tconst {\n\t\tvalue: enteredName,\n\t\tisValid: enteredNameIsValid,\n\t\thasError: nameInputHasError,\n\t\tvalueChangeHandler: nameChangedHandler,\n\t\tinputBlurHandler: nameBlurHandler,\n\t\treset: resetNameInput,\n\t} = useInput((value) => value.trim() !== \"\");\n\n\tconst [enteredEmail, setEnteredEmail] = useState(\"\");\n\tconst [enteredEmailTouch, setEnteredEmailTouch] = useState(\"\");\n\n\tconst enterEmailIsValid = enteredEmail.includes(\"@\");\n\tconst enteredEmailIsInvalid = !enterEmailIsValid && enteredEmailTouch;\n\n\tlet formIsValid = false;\n\n\tif (enteredNameIsValid && enterEmailIsValid) {\n\t\tformIsValid = true;\n\t}\n\n\tconst emailInputChangeHandler = (e) => {\n\t\tsetEnteredEmail(e.target.value);\n\t};\n\n\tconst emailInputBlurHandler = (e) => {\n\t\tsetEnteredEmailTouch(true);\n\t};\n\n\tconst formSubmissionHandler = (e) => {\n\t\te.preventDefault();\n\n\t\tif (!enteredNameIsValid) {\n\t\t\treturn;\n\t\t}\n\n\t\tconsole.log(enteredName);\n\n\t\t// nameInputRef.current.value = \"\";         // NOT IDEAL, DON'T MANIPULATE THE DOM\n\t\tresetNameInput();\n\n\t\tsetEnteredEmail(\"\");\n\t\tsetEnteredEmailTouch(false);\n\t};\n\n\tconst nameInputClasses = nameInputHasError\n\t\t? \"form-control\"\n\t\t: \"form-control invalid\";\n\n\tconst emailInputClasses = enteredEmailIsInvalid\n\t\t? \"form-control invalid\"\n\t\t: \"form-control\";\n\n\treturn (\n\t\t<form onSubmit={formSubmissionHandler}>\n\t\t\t<div className={nameInputClasses}>\n\t\t\t\t<label htmlFor=\"name\">Your Name</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tid=\"name\"\n\t\t\t\t\tonChange={nameChangedHandler}\n\t\t\t\t\tonBlur={nameBlurHandler}\n\t\t\t\t\tvalue={enteredName}\n\t\t\t\t/>\n\t\t\t\t{nameInputHasError && (\n\t\t\t\t\t<p className=\"error-text\">Name must not be empty</p>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className={emailInputClasses}>\n\t\t\t\t<label htmlFor=\"email\">Your Email</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"email\"\n\t\t\t\t\tid=\"email\"\n\t\t\t\t\tonChange={emailInputChangeHandler}\n\t\t\t\t\tonBlur={emailInputBlurHandler}\n\t\t\t\t\tvalue={enteredEmail}\n\t\t\t\t/>\n\t\t\t\t{enteredEmailIsInvalid && (\n\t\t\t\t\t<p className=\"error-text\">Please enter a valid email</p>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t\t<div className=\"form-actions\">\n\t\t\t\t<button disabled={!formIsValid}>Submit</button>\n\t\t\t</div>\n\t\t</form>\n\t);\n};\n\nexport default SimpleInput;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,OAAOC,QAAQ,MAAM,oBAAoB;AAAC;AAE1C,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAA;EAC9B,MAAM;IACLC,KAAK,EAAEC,WAAW;IAClBC,OAAO,EAAEC,kBAAkB;IAC3BC,QAAQ,EAAEC,iBAAiB;IAC3BC,kBAAkB,EAAEC,kBAAkB;IACtCC,gBAAgB,EAAEC,eAAe;IACjCC,KAAK,EAAEC;EACR,CAAC,GAAGd,QAAQ,CAAEG,KAAK,IAAKA,KAAK,CAACY,IAAI,EAAE,KAAK,EAAE,CAAC;EAE5C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACmB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAE9D,MAAMqB,iBAAiB,GAAGJ,YAAY,CAACK,QAAQ,CAAC,GAAG,CAAC;EACpD,MAAMC,qBAAqB,GAAG,CAACF,iBAAiB,IAAIF,iBAAiB;EAErE,IAAIK,WAAW,GAAG,KAAK;EAEvB,IAAIjB,kBAAkB,IAAIc,iBAAiB,EAAE;IAC5CG,WAAW,GAAG,IAAI;EACnB;EAEA,MAAMC,uBAAuB,GAAIC,CAAC,IAAK;IACtCR,eAAe,CAACQ,CAAC,CAACC,MAAM,CAACvB,KAAK,CAAC;EAChC,CAAC;EAED,MAAMwB,qBAAqB,GAAIF,CAAC,IAAK;IACpCN,oBAAoB,CAAC,IAAI,CAAC;EAC3B,CAAC;EAED,MAAMS,qBAAqB,GAAIH,CAAC,IAAK;IACpCA,CAAC,CAACI,cAAc,EAAE;IAElB,IAAI,CAACvB,kBAAkB,EAAE;MACxB;IACD;IAEAwB,OAAO,CAACC,GAAG,CAAC3B,WAAW,CAAC;;IAExB;IACAU,cAAc,EAAE;IAEhBG,eAAe,CAAC,EAAE,CAAC;IACnBE,oBAAoB,CAAC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMa,gBAAgB,GAAGxB,iBAAiB,GACvC,cAAc,GACd,sBAAsB;EAEzB,MAAMyB,iBAAiB,GAAGX,qBAAqB,GAC5C,sBAAsB,GACtB,cAAc;EAEjB,oBACC;IAAM,QAAQ,EAAEM,qBAAsB;IAAA,wBACrC;MAAK,SAAS,EAAEI,gBAAiB;MAAA,wBAChC;QAAO,OAAO,EAAC,MAAM;QAAA,UAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAAQ,eACvC;QACC,IAAI,EAAC,MAAM;QACX,EAAE,EAAC,MAAM;QACT,QAAQ,EAAEtB,kBAAmB;QAC7B,MAAM,EAAEE,eAAgB;QACxB,KAAK,EAAER;MAAY;QAAA;QAAA;QAAA;MAAA,QAClB,EACDI,iBAAiB,iBACjB;QAAG,SAAS,EAAC,YAAY;QAAA,UAAC;MAAsB;QAAA;QAAA;QAAA;MAAA,QAChD;IAAA;MAAA;MAAA;MAAA;IAAA,QACI,eACN;MAAK,SAAS,EAAEyB,iBAAkB;MAAA,wBACjC;QAAO,OAAO,EAAC,OAAO;QAAA,UAAC;MAAU;QAAA;QAAA;QAAA;MAAA,QAAQ,eACzC;QACC,IAAI,EAAC,OAAO;QACZ,EAAE,EAAC,OAAO;QACV,QAAQ,EAAET,uBAAwB;QAClC,MAAM,EAAEG,qBAAsB;QAC9B,KAAK,EAAEX;MAAa;QAAA;QAAA;QAAA;MAAA,QACnB,EACDM,qBAAqB,iBACrB;QAAG,SAAS,EAAC,YAAY;QAAA,UAAC;MAA0B;QAAA;QAAA;QAAA;MAAA,QACpD;IAAA;MAAA;MAAA;MAAA;IAAA,QACI,eACN;MAAK,SAAS,EAAC,cAAc;MAAA,uBAC5B;QAAQ,QAAQ,EAAE,CAACC,WAAY;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QAC1C;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAET,CAAC;AAAC,GAvFItB,WAAW;EAAA,QAQZD,QAAQ;AAAA;AAAA,KARPC,WAAW;AAyFjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}